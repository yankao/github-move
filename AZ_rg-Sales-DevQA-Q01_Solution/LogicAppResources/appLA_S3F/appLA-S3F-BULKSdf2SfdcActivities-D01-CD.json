{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "webmobile": {
            "defaultValue": {
                "LogicApps": {
                    "name": "appLA-S3F-BULKSdf2SfdcActivities-D01-CD",
                    "logicAppState": "Disabled",
                    "tagValues": {
                        "costcenter": "60726",
                        "owner": "Kevin Hazzard",
                        "dept": "Sales",
                        "project": "New AGDC",
                        "env": "DEV"
                    }
                }
            },
            "type": "object"
        },
        "LogicAppLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        }
    },
    "variables": {},
    "resources": [
        {
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "ActivitiesJson": {
                            "actions": {
                                "For_each": {
                                    "actions": {
                                        "Append_to_array_variable_2": {
                                            "inputs": {
                                                "name": "ActivitiestoUpload",
                                                "value": "@variables('ActivitytoUpload')"
                                            },
                                            "runAfter": {
                                                "Set_WorkOrdertoUpload": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable"
                                        },
                                        "Append_to_array_variable_3": {
                                            "inputs": {
                                                "name": "WOstoupload",
                                                "value": "@variables('WorkOrdertoUpload')"
                                            },
                                            "runAfter": {
                                                "Append_to_array_variable_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable"
                                        },
                                        "Set_ActivitytoUpload": {
                                            "inputs": {
                                                "name": "ActivitytoUpload",
                                                "value": {
                                                    "AccountId": "@items('For_each')?['Id']",
                                                    "Activity_Rank__c": "@items('ActivitiesJson')['ActivityRank']",
                                                    "Activity_Score__c": "@items('ActivitiesJson')['ActivityScore']",
                                                    "Category": "@items('ActivitiesJson')['Category']",
                                                    "City": "@items('ActivitiesJson')['City']",
                                                    "Description": "@items('ActivitiesJson')['Description']",
                                                    "InitiativeQuestioinguid": "@items('ActivitiesJson')['InitiativeQuestioinguid']",
                                                    "Initiativeguid": "@items('ActivitiesJson')['Initiativeguid']",
                                                    "Next_Critical_Action_Date__c": "@items('ActivitiesJson')['NextCriticalActionDate']",
                                                    "PostalCode": "@items('ActivitiesJson')['PostalCode']",
                                                    "SKU_Detail__c": "@items('ActivitiesJson')['SKUDetail']",
                                                    "State": "@items('ActivitiesJson')['State']",
                                                    "Store_Rank__c": "@items('ActivitiesJson')['StoreRankc']",
                                                    "Store_Score__c": "@items('ActivitiesJson')['StoreScore']",
                                                    "Street": "@items('ActivitiesJson')['Street']"
                                                }
                                            },
                                            "runAfter": {},
                                            "type": "SetVariable"
                                        },
                                        "Set_WorkOrdertoUpload": {
                                            "inputs": {
                                                "name": "workordertoupload",
                                                "value": {
                                                    "AccountId": "@items('For_each')?['Id']",
                                                    "City": "@items('ActivitiesJson')['City']",
                                                    "GUID__c": "@items('ActivitiesJson')['Initiativeguid']",
                                                    "Next_Critical_Action_Date__c": "@items('ActivitiesJson')['WorkOrderDate']",
                                                    "PostalCode": "@items('ActivitiesJson')['PostalCode']",
                                                    "State": "@items('ActivitiesJson')['State']",
                                                    "Store_Rank__c": "@items('ActivitiesJson')['StoreRankc']",
                                                    "Store_Score__c": "@items('ActivitiesJson')['StoreScore']",
                                                    "Street": "@items('ActivitiesJson')['Street']"
                                                }
                                            },
                                            "runAfter": {
                                                "Set_ActivitytoUpload": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_4": {
                                            "inputs": {
                                                "name": "ActivitytoUpload",
                                                "value": {}
                                            },
                                            "runAfter": {
                                                "Append_to_array_variable_3": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_5": {
                                            "inputs": {
                                                "name": "WorkOrdertoUpload",
                                                "value": {}
                                            },
                                            "runAfter": {
                                                "Set_variable_4": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        }
                                    },
                                    "foreach": "@body('Get_records')?['value']",
                                    "runAfter": {
                                        "Get_records": [
                                            "Succeeded"
                                        ]
                                    },
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 50
                                        }
                                    },
                                    "type": "Foreach"
                                },
                                "Get_records": {
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Account'))}/items",
                                        "queries": {
                                            "$filter": "AccountNumber eq '@{items('ActivitiesJson')['AccountNumber']}'",
                                            "$select": "Id",
                                            "$top": 1
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "ApiConnection"
                                }
                            },
                            "foreach": "@body('Parse_JSON')",
                            "runAfter": {
                                "Initialize_Variable_for_WorkOrdertoUpload": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            },
                            "type": "Foreach"
                        },
                        "Compose": {
                            "inputs": "@base64ToString(body('Get_blob_content').$content)",
                            "runAfter": {
                                "Get_blob_content": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose"
                        },
                        "Condition": {
                            "actions": {
                                "Close_or_abort_a_job": {
                                    "inputs": {
                                        "body": {
                                            "state": "UploadComplete"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                            }
                                        },
                                        "method": "patch",
                                        "path": "/codeless/jobs/ingest/@{encodeURIComponent(body('Create_a_job')?['id'])}"
                                    },
                                    "runAfter": {
                                        "Delay": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Close_or_abort_a_job_2": {
                                    "inputs": {
                                        "body": {
                                            "state": "UploadComplete"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                            }
                                        },
                                        "method": "patch",
                                        "path": "/codeless/jobs/ingest/@{encodeURIComponent(body('Create_a_job_2')?['id'])}"
                                    },
                                    "runAfter": {
                                        "Delay_3": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Compose_2": {
                                    "inputs": "@union(variables('WOstoUpload'),variables('WOstoUpload')) ",
                                    "runAfter": {},
                                    "type": "Compose"
                                },
                                "Create_CSV_table": {
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@variables('WOstoupload')"
                                    },
                                    "runAfter": {
                                        "Set_WorkOrderstoUpload": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table"
                                },
                                "Create_CSV_table_2": {
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@variables('WOLineItemstoUpload')"
                                    },
                                    "runAfter": {
                                        "For_each_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table"
                                },
                                "Create_a_job": {
                                    "inputs": {
                                        "body": {
                                            "columnDelimiter": "COMMA",
                                            "lineEnding": "CRLF",
                                            "object": "WorkOrder",
                                            "operation": "insert"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/jobs/ingest"
                                    },
                                    "runAfter": {
                                        "Create_CSV_table": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Create_a_job_2": {
                                    "inputs": {
                                        "body": {
                                            "columnDelimiter": "COMMA",
                                            "lineEnding": "CRLF",
                                            "object": "WorkOrderLineItem",
                                            "operation": "insert"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/jobs/ingest"
                                    },
                                    "runAfter": {
                                        "Create_CSV_table_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Delay": {
                                    "inputs": {
                                        "interval": {
                                            "count": 10,
                                            "unit": "Second"
                                        }
                                    },
                                    "runAfter": {
                                        "Upload_job_data": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Wait"
                                },
                                "Delay_3": {
                                    "inputs": {
                                        "interval": {
                                            "count": 10,
                                            "unit": "Second"
                                        }
                                    },
                                    "runAfter": {
                                        "Upload_job_data_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Wait"
                                },
                                "For_each_2": {
                                    "actions": {
                                        "For_each_3": {
                                            "actions": {
                                                "Append_to_WOLineItemstoUpload1": {
                                                    "inputs": {
                                                        "name": "WOLineItemstoUpload",
                                                        "value": "@variables('WorkOrderLineItemtoUpload')"
                                                    },
                                                    "runAfter": {
                                                        "Set_variable": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "AppendToArrayVariable"
                                                },
                                                "Set_variable": {
                                                    "inputs": {
                                                        "name": "WorkOrderLineItemtoUpload",
                                                        "value": {
                                                            "Account__c": "@items('For_each_3')['AccountId']",
                                                            "Activity_Rank__c": "@items('For_each_2')['Activity_Rank__c']",
                                                            "Activity_Score__c": "@items('For_each_2')['Activity_Score__c']",
                                                            "Category__c": "@items('For_each_2')['Category']",
                                                            "City": "@items('For_each_2')['City']",
                                                            "Description": "@items('For_each_2')['Description']",
                                                            "GUID__c": "@items('For_each_2')['InitiativeQuestioinguid']",
                                                            "Next_Critical_Action_Date__c": "@items('For_each_2')['Next_Critical_Action_Date__c']",
                                                            "PostalCode": "@items('For_each_2')['PostalCode']",
                                                            "SKU_Detail__c": "@items('For_each_2')['SKU_Detail__c']",
                                                            "State": "@items('For_each_2')['State']",
                                                            "Street": "@items('For_each_2')['Street']",
                                                            "WorkOrderId": "@items('For_each_3')?['Id']"
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                },
                                                "null_WorkOrderLineItem": {
                                                    "inputs": {
                                                        "name": "WorkOrderLineItemtoUpload",
                                                        "value": {}
                                                    },
                                                    "runAfter": {
                                                        "Append_to_WOLineItemstoUpload1": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "foreach": "@body('Get_records_3')?['value']",
                                            "runAfter": {
                                                "Get_records_3": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 50
                                                }
                                            },
                                            "type": "Foreach"
                                        },
                                        "Get_records_3": {
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('WorkOrder'))}/items",
                                                "queries": {
                                                    "$filter": "Status eq 'New' and AccountId eq '@{items('For_each_2')['AccountId']}' and GUID__c eq '@{items('For_each_2')['Initiativeguid']}'",
                                                    "$orderby": "CreatedDate desc",
                                                    "$select": "Id, AccountId",
                                                    "$top": 1
                                                }
                                            },
                                            "runAfter": {},
                                            "type": "ApiConnection"
                                        }
                                    },
                                    "foreach": "@body('Parse_JSON_2')",
                                    "runAfter": {
                                        "Parse_JSON_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    },
                                    "type": "Foreach"
                                },
                                "Get_job_results": {
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/codeless/jobs/ingest/@{encodeURIComponent(body('Get_job_info')?['id'])}/results",
                                        "queries": {
                                            "resultType": "Successful"
                                        }
                                    },
                                    "runAfter": {
                                        "Until": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Get_job_results_2": {
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/codeless/jobs/ingest/@{encodeURIComponent(body('Get_job_info_2')?['id'])}/results",
                                        "queries": {
                                            "resultType": "Successful"
                                        }
                                    },
                                    "runAfter": {
                                        "Until_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Insert_row": {
                                    "inputs": {
                                        "body": {
                                            "SFDCJobId": "@body('Get_job_info_2')?['id']",
                                            "TransactionDate": "@{utcNow()}",
                                            "TransactionDetails": "@body('Get_job_results_2')",
                                            "TransactionPrinciple": "Logic App",
                                            "TransactionSource": "appLA-S3F-BULKSdf2SfdcActivitiesWOLI-D01",
                                            "TransactionStatus": "@body('Get_job_info_2')?['state']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SEP_TransactionLog]'))}/items"
                                    },
                                    "runAfter": {
                                        "Get_job_results_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Insert_row_2": {
                                    "inputs": {
                                        "body": {
                                            "SFDCJobId": "@body('Get_job_info')?['id']",
                                            "TransactionDate": "@{utcNow()}",
                                            "TransactionDetails": "@body('Get_job_results')",
                                            "TransactionPrinciple": "Logic App",
                                            "TransactionSource": "appLA-S3F-BULKSdf2SfdcActivitiesWO-D01",
                                            "TransactionStatus": "@body('Get_job_info')?['state']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SEP_TransactionLog]'))}/items"
                                    },
                                    "runAfter": {
                                        "Get_job_results": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Parse_JSON_2": {
                                    "inputs": {
                                        "content": "@variables('ActivitiestoUpload')",
                                        "schema": {
                                            "items": {
                                                "properties": {
                                                    "AccountId": {
                                                        "type": "string"
                                                    },
                                                    "Activity_Rank__c": {
                                                        "type": "string"
                                                    },
                                                    "Activity_Score__c": {
                                                        "type": "string"
                                                    },
                                                    "Category": {
                                                        "type": "string"
                                                    },
                                                    "City": {
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "type": "string"
                                                    },
                                                    "InitiativeQuestioinguid": {
                                                        "type": "string"
                                                    },
                                                    "Initiativeguid": {
                                                        "type": "string"
                                                    },
                                                    "Next_Critical_Action_Date__c": {
                                                        "type": "string"
                                                    },
                                                    "PostalCode": {
                                                        "type": "string"
                                                    },
                                                    "SKU_Detail__c": {
                                                        "type": "string"
                                                    },
                                                    "State": {
                                                        "type": "string"
                                                    },
                                                    "Store_Rank__c": {
                                                        "type": "string"
                                                    },
                                                    "Store_Score__c": {
                                                        "type": "string"
                                                    },
                                                    "Street": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "AccountId",
                                                    "Activity_Rank__c",
                                                    "Activity_Score__c",
                                                    "Category",
                                                    "City",
                                                    "Description",
                                                    "InitiativeQuestioinguid",
                                                    "Initiativeguid",
                                                    "Next_Critical_Action_Date__c",
                                                    "PostalCode",
                                                    "SKU_Detail__c",
                                                    "State",
                                                    "Store_Rank__c",
                                                    "Store_Score__c",
                                                    "Street"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "runAfter": {
                                        "Insert_row_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson"
                                },
                                "Set_WorkOrderstoUpload": {
                                    "inputs": {
                                        "name": "WOstoupload",
                                        "value": "@outputs('Compose_2')"
                                    },
                                    "runAfter": {
                                        "Compose_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                },
                                "Until": {
                                    "actions": {
                                        "Delay_2": {
                                            "inputs": {
                                                "interval": {
                                                    "count": 10,
                                                    "unit": "Second"
                                                }
                                            },
                                            "runAfter": {
                                                "Set_variable_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Wait"
                                        },
                                        "Get_job_info": {
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/codeless/jobs/ingest/@{encodeURIComponent(body('Close_or_abort_a_job')?['id'])}"
                                            },
                                            "runAfter": {},
                                            "type": "ApiConnection"
                                        },
                                        "Set_variable_2": {
                                            "inputs": {
                                                "name": "sfdcJobState",
                                                "value": "@body('Get_job_info')?['state']"
                                            },
                                            "runAfter": {
                                                "Get_job_info": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": "@or(equals(variables('sfdcJobState'), 'JobComplete'),equals(variables('sfdcJobState'), 'Failed'))",
                                    "limit": {
                                        "count": 60,
                                        "timeout": "PT1H"
                                    },
                                    "runAfter": {
                                        "Close_or_abort_a_job": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Until"
                                },
                                "Until_2": {
                                    "actions": {
                                        "Delay_4": {
                                            "inputs": {
                                                "interval": {
                                                    "count": 10,
                                                    "unit": "Second"
                                                }
                                            },
                                            "runAfter": {
                                                "Set_variable_3": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Wait"
                                        },
                                        "Get_job_info_2": {
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['salesforce']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/codeless/jobs/ingest/@{encodeURIComponent(body('Close_or_abort_a_job_2')?['id'])}"
                                            },
                                            "runAfter": {},
                                            "type": "ApiConnection"
                                        },
                                        "Set_variable_3": {
                                            "inputs": {
                                                "name": "sfdcLineItemJobStatus",
                                                "value": "@body('Get_job_info_2')?['state']"
                                            },
                                            "runAfter": {
                                                "Get_job_info_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": "@or(equals(variables('sfdcLineItemJobStatus'), 'JobComplete'),equals(variables('sfdcLineItemJobStatus'), 'Failed'))",
                                    "limit": {
                                        "count": 60,
                                        "timeout": "PT1H"
                                    },
                                    "runAfter": {
                                        "Close_or_abort_a_job_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Until"
                                },
                                "Upload_job_data": {
                                    "inputs": {
                                        "body": "@body('Create_CSV_table')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "path": "/codeless/jobs/ingest/@{encodeURIComponent(body('Create_a_job')?['id'])}/batches"
                                    },
                                    "runAfter": {
                                        "Create_a_job": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Upload_job_data_2": {
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_2')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['salesforce']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "path": "/codeless/jobs/ingest/@{encodeURIComponent(body('Create_a_job_2')?['id'])}/batches"
                                    },
                                    "runAfter": {
                                        "Create_a_job_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                }
                            },
                            "else": {
                                "actions": {
                                    "Insert_Row_for_Failure_(No_Job_IDs)": {
                                        "inputs": {
                                            "body": {
                                                "TransactionDate": "@{utcNow()}",
                                                "TransactionDetails": "\"Parsing Failure - Failed Condition - No SFDC Job Created\"",
                                                "TransactionPrinciple": "LogicApp",
                                                "TransactionSource": "appLA-S3F-BULKSdf2SfdcActivitiesFailure-D01",
                                                "TransactionStatus": "@variables('sfdcJobState')"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['sql_1']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SEP_TransactionLog]'))}/items"
                                        },
                                        "runAfter": {},
                                        "type": "ApiConnection"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('WOstoupload'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Get_blob_content": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(triggerBody()?['Id']))}/content",
                                "queries": {
                                    "inferContentType": false
                                }
                            },
                            "metadata": {
                                "JTJmczNmZGV2YWN0aXZpdGllcyUyZjIwMTlfMDVfMjJfUUFfQWN0aXZpdGllcy5qc29u": "/s3fdevactivities/2019_05_22_QA_Activities.json",
                                "JTJmczNmZGV2YWN0aXZpdGllcyUyZldPLmpzb24=": "/s3fdevactivities/WO.json"
                            },
                            "runAfter": {},
                            "type": "ApiConnection"
                        },
                        "Initialize_ActivitiestoUpload": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ActivitiestoUpload",
                                        "type": "Array"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_ActivitytoUpload": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_ActivitytoUpload": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ActivitytoUpload",
                                        "type": "Object"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_Variable_for_WOstoupload": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "WOstoupload",
                                        "type": "Array"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_WOLineItemstoUpload": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_Variable_for_WorkOrdertoUpload": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "WorkOrdertoUpload",
                                        "type": "Object"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_Variable_for_WOstoupload": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_WOLineItemstoUpload": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "WOLineItemstoUpload",
                                        "type": "Array"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_WorkOrderLineItemtoUpload": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_WorkOrderLineItemtoUpload": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "WorkOrderLineItemtoUpload",
                                        "type": "Object"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_ActivitiestoUpload": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_sfdcJobState": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "sfdcJobState",
                                        "type": "String"
                                    }
                                ]
                            },
                            "runAfter": {
                                "ActivitiesJson": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_2": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "sfdcLineItemJobStatus",
                                        "type": "String"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_sfdcJobState": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Parse_JSON": {
                            "inputs": {
                                "content": "@outputs('Compose')",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "AccountNumber": {
                                                "type": "string"
                                            },
                                            "ActivityRank": {
                                                "type": "string"
                                            },
                                            "ActivityScore": {
                                                "type": "string"
                                            },
                                            "Category": {
                                                "type": "string"
                                            },
                                            "City": {
                                                "type": "string"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "InitiativeQuestioinguid": {
                                                "type": "string"
                                            },
                                            "Initiativeguid": {
                                                "type": "string"
                                            },
                                            "NextCriticalActionDate": {
                                                "type": "string"
                                            },
                                            "PostalCode": {
                                                "type": "string"
                                            },
                                            "SKUDetail": {
                                                "type": "string"
                                            },
                                            "State": {
                                                "type": "string"
                                            },
                                            "StoreRankc": {
                                                "type": "string"
                                            },
                                            "StoreScore": {
                                                "type": "string"
                                            },
                                            "Street": {
                                                "type": "string"
                                            },
                                            "WorkOrderDate": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "AccountNumber",
                                            "Street",
                                            "City",
                                            "State",
                                            "PostalCode",
                                            "StoreScore",
                                            "StoreRankc",
                                            "WorkOrderDate",
                                            "NextCriticalActionDate",
                                            "Initiativeguid",
                                            "ActivityScore",
                                            "ActivityRank",
                                            "Category",
                                            "SKUDetail",
                                            "Description",
                                            "InitiativeQuestioinguid"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_blob_is_added_or_modified_(properties_only)": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/triggers/batch/onupdatedfile",
                                "queries": {
                                    "folderId": "JTJmczNmZGV2YWN0aXZpdGllcw==",
                                    "maxFileCount": 10
                                }
                            },
                            "metadata": {
                                "JTJmczNmZGV2YWN0aXZpdGllcw==": "/s3fdevactivities"
                            },
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnection"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "/subscriptions/ca627333-a563-4f3f-8ea9-cb1c8a4e9098/resourceGroups/rg-Sales-DevQA-Q01/providers/Microsoft.Web/connections/azureblob-1",
                                "connectionName": "azureblob-1",
                                "id": "/subscriptions/ca627333-a563-4f3f-8ea9-cb1c8a4e9098/providers/Microsoft.Web/locations/eastus/managedApis/azureblob"
                            },
                            "salesforce": {
                                "connectionId": "/subscriptions/ca627333-a563-4f3f-8ea9-cb1c8a4e9098/resourceGroups/rg-Sales-DevQA-Q01/providers/Microsoft.Web/connections/salesforce-5",
                                "connectionName": "salesforce-5",
                                "id": "/subscriptions/ca627333-a563-4f3f-8ea9-cb1c8a4e9098/providers/Microsoft.Web/locations/eastus/managedApis/salesforce"
                            },
                            "sql_1": {
                                "connectionId": "/subscriptions/ca627333-a563-4f3f-8ea9-cb1c8a4e9098/resourceGroups/rg-Sales-DevQA-Q01/providers/Microsoft.Web/connections/sql",
                                "connectionName": "sql",
                                "id": "/subscriptions/ca627333-a563-4f3f-8ea9-cb1c8a4e9098/providers/Microsoft.Web/locations/eastus/managedApis/sql"
                            }
                        }
                    }
                },
                "state": "[parameters('webmobile').LogicApps.logicAppState]"
            },
            "apiVersion": "2016-06-01",
            "name": "[parameters('webmobile').LogicApps.name]",
            "type": "Microsoft.Logic/workflows",
            "location": "[parameters('LogicAppLocation')]",
            "tags": {
                "costcenter": "[parameters('webmobile').LogicApps.tagValues.costcenter]",
                "owner": "[parameters('webmobile').LogicApps.tagValues.owner]",
                "dept": "[parameters('webmobile').LogicApps.tagValues.dept]",
                "project": "[parameters('webmobile').LogicApps.tagValues.project]",
                "env": "[parameters('webmobile').LogicApps.tagValues.env]",
                "displayName": "LogicApp"
            },
            "dependsOn": []
        }
    ],
    "outputs": {}
}